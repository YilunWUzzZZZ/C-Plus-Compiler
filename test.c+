#include "cpluslib/c+lib.h"
// int aaa[100];
// int gv;

// // int add(int a, int b) {
// //     return a+b;
// // } 

// // int main() {
// //     double a,b,f;
// //     int c=0,d=1,e=2;
// //     a = 1.2 + d;
// //     b = d;
// //     if (b > 0 && a > 0.1) {
// //         print("ok\\n");
// //     }
// //     f = (1.0+1+a+b+e+add(c,d)) / 6 ;
// //     print(f);
// //     return 0;
// // }

// // int fact(int x) {
// //     if (x == 1) {
// //         return 1;
// //     }
// //     return x* fact(x-1);
// // }

// // int main() {
// //     int x = 3, y=3, z=x;
// //     int a[x][y];
// //     a[z-2][z-x] = 2;
// //     if (a[1][0] > 0) {
// //         int b[z];
// //         b[0] = z+x;
// //         print(b[0]);
// //         return -1;
// //     }  
// //     return 0;
// // }

// // int giveMeArray(int a[][5], string b[]) {
// //     int x;
// //     x = a[0][1];
// //     a[1][0] = 2+x;
// //     b[1] = "adsd";
// //     return 0;
// // }

// // int main() {
// //     int a=3,b=1;
// //     int c[5][5];
// //     string x="asds";
// //     string d[a];
// //     c[0][1] = 5;
// //     giveMeArray(c, d);
// //     print(x);
// //     print(c[1][0], d[1]);
// //     return 0;
// // }

// void sort(int a[], int size) {
//     int i=size-1; 
//     int j;
//     // sort 
//     while (i >0) do {
//         j = 0;
//         while (j < i) do {
//             if (a[j] > a[j+1]) {
//                 int t = a[j+1];
//                 a[j+1] = a[j];
//                 a[j] = t;
//             }
//             j = j+1;
//         }
//         i = i -1;
//     }
//     return;
// }


// int readUInt() {
//     bool done = false;
//     int i=0;
//     while (done == false) do {
//         char c = readc();
//         if (c <48 || c>57) {
//             done = true;
//         } else {
//             i = i*10 + (c-48);
//         }
//     }
//     return i;
// }

// int testSorting() {
//     int cnt=0;
//     int size;
//     print("enter the size of the array\\n");
//     size  = readUInt();
//     print("enter the the array now\\n");
//     { 
//         int x[size];
//         while (cnt < size) do {
//             x[cnt] = readUInt();
//             cnt = cnt+1;
//         }
//         sort(x, size);
//         cnt = 0;
//         while (cnt < size) do {
//             print(x[cnt]);
//             print(" ");
//             cnt = cnt+1;
//         }
//     }
//     print("\\n");
  
//     return 0;
// }

// // print fibonacci numbers
// // int constEval(int a, int b) {
// //     int x = 1+5/3+a;
// //     int y = 2*5-3%2 + (-8) + (1|2) + x;
// //     if (x>0) {
// //         ;
// //     } else ;
// //     return y;
// // }
// // int tt() {
// //     return 4;
// // }

// void fibonacci(int num) {
//     int a1 = 0, a2 = 1;
//     int i=0;
//     if (num <= 0) {
//         return;
//     } else if (num == 1) {
//         print(0);
//     } else if (num >= 2) {
//         print(0,1);
//         print(" ");
//     }
//     num = num -2;
//     while (num > 0) do {
//         int tmp = a2;
//         a2 = a1+a2;
//         a1 = tmp;
//         print(a2);
//         print(" ");
//         num = num -1;
//     }
//     return;
// }

// // int main() {
// //     fibonacci(5);
// //     return 0;
// // }

// // int main() {
// //     int a[10] = {0, 1,2};
// //     int x = 5;
// //     int b=1,c=0;
// //     a[0] = x+aaa[1];
// //     if (a[0] > 1) {
// //         int a1[4];
// //         a1[0] = a[1] + a[2];
// //         c = a[x] + b;
// //     } else {
// //         int a2[6];
// //         a2[0] = a[c] + b;
// //     }
// //     return c;
// // }

// // int main() {
// //     int b[10] = {3,2,1,4,8,9,0,6,5,7};
// //     int i=9; 
// //     int j;
// //     // sort 
// //     while (i >0) do {
// //         j = 0;
// //         while (j < i) do {
// //             if (b[j] > b[j+1]) {
// //                 int t = b[j+1];
// //                 b[j+1] = b[j];
// //                 b[j] = t;
// //             }
// //             j = j+1;
// //         }
// //         i = i -1;
// //     }
// //     j = 0;
// //     while (j<10) do {
// //         print(b[j]);
// //         print(" ");
// //         j = j+1;
// //     }
// //     fibonacci(b[9]);
// //     return 0;
// // }


// int main(){
//     int i = 0, j=0;
//     while (i<8) do{
//         print(i,"\\n");
//         i = i + 1;
//     }
//     while (j<8) do{
//         print(j,"\\n");
//         j = j + 1;
//     } 
//     return 0;
// }

// int testifif(int x, int y) {
//     if (y > 0) {
//         if (x>0) {
//             if (y > 0) {
//                 print("case1: ");
//                 print(y, "\\n");
//             }
//             if (x+y > 1) {
//                 print("case2: ");
//                 print(x+y, "\\n");
//             }
//             if(x > 2) {
//                 print("case3: ");
//                 print(x, "\\n");
//             }
//         }
//     } else {
//         if (x>0) {
//             if (x+y > 1) {
//                 print("case4: ");
//                 print(x+y, "\\n");
//             }
//             if(x > 2) {
//                 print("case5: ");
//                 print(x, "\\n");
//             }
//         }
//     }
//     return 0;
// }
// string board[6][6];
// bool done;
// int player;
// string king2;
// string king1;

// void init() {
//     board[0][0] = 'a00';
//     board[1][1] = 'b11';
//     board[2][2] = 'c22';
//     done = false;
//     player = 1;
//     return;
// }

// void change( int r1, int c1 , int r2 , int c2 ) {
    
//     if (player == 1 && board[r2][c2] == king2){
//         print("Player 1 has won the game!!\\n");
//         done = true;
//     } else if (player == 2 && board[r2][c2] == king1){
//         print("Player 2 has won the game!!\\n");
//         done = true;
//     } 
    
   
//     board[r2][c2] = board[r1][c1];
//     board[r1][c1] = ' ';
     
    
//     return;    
// }

// int main() {

//     init();
//     print(board[1][1], "\\n");
//     print(board[2][2],"\\n");
//     change(1,1,2,2);
//     print(board[1][1], "\\n");
//     print(board[2][2],"\\n");
//     return 0;
// }

int main() {
    int a[5] = {1,2,3,4,5};
    int iter;
    foreach iter in a do {
        print(iter);
        print(" ");
    }
    return 0;

}